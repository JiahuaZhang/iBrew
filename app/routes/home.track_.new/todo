import { CodeHighlightNode, CodeNode, registerCodeHighlighting } from '@lexical/code';
import { HashtagNode } from '@lexical/hashtag';
import { AutoLinkNode, LinkNode } from '@lexical/link';
import { ListItemNode, ListNode } from '@lexical/list';
import { MarkNode } from '@lexical/mark';
import { OverflowNode } from '@lexical/overflow';
import {
  AutoLinkPlugin, createLinkMatcherWithRegExp,
} from '@lexical/react/LexicalAutoLinkPlugin';
import { CheckListPlugin } from '@lexical/react/LexicalCheckListPlugin';
import LexicalClickableLinkPlugin from '@lexical/react/LexicalClickableLinkPlugin';
import { LexicalComposer } from '@lexical/react/LexicalComposer';
import { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';
import { ContentEditable } from '@lexical/react/LexicalContentEditable';
import LexicalErrorBoundary from '@lexical/react/LexicalErrorBoundary';
import { HashtagPlugin } from '@lexical/react/LexicalHashtagPlugin';
import { HistoryPlugin } from '@lexical/react/LexicalHistoryPlugin';
import { HorizontalRuleNode } from '@lexical/react/LexicalHorizontalRuleNode';
import { HorizontalRulePlugin } from '@lexical/react/LexicalHorizontalRulePlugin';
import { LinkPlugin } from '@lexical/react/LexicalLinkPlugin';
import { ListPlugin } from '@lexical/react/LexicalListPlugin';
import { MarkdownShortcutPlugin } from '@lexical/react/LexicalMarkdownShortcutPlugin';
import { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';
import { TablePlugin } from '@lexical/react/LexicalTablePlugin';
import { HeadingNode, QuoteNode } from '@lexical/rich-text';
import { TableCellNode, TableNode, TableRowNode } from '@lexical/table';
import { useEffect } from 'react';
import { EmojiNode } from '../nodes/EmojiNode';
import AutoEmbedPlugin from '../plugins/AutoEmbedPlugin';
import ComponentPickerPlugin from '../plugins/ComponentPickerPlugin';
import DragDropPaste from '../plugins/DragDropPastePlugin';
import EmojiPickerPlugin from '../plugins/EmojiPickerPlugin';
import EmojisPlugin from '../plugins/EmojisPlugin';
import PlaygroundEditorTheme from '../themes/PlaygroundEditorTheme';

const URL_REGEX =
  /((https?:\/\/(www\.)?)|(www\.))[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;

const MATCHERS = [
  createLinkMatcherWithRegExp(URL_REGEX, (text) => {
    return text.startsWith('http') ? text : `https://${text}`;
  })
];

const initialConfig = {
  namespace: 'MyEditor',
  nodes: [
    HeadingNode,
    CodeHighlightNode,
    CodeNode,
    HashtagNode,
    AutoLinkNode,
    LinkNode,
    ListItemNode,
    ListNode,
    MarkNode,
    OverflowNode,
    HorizontalRuleNode,
    QuoteNode,
    TableCellNode,
    TableNode,
    TableRowNode,
    EmojiNode
  ],
  onError: console.error,
  theme: PlaygroundEditorTheme
};

export default function CodeHighlightPlugin(): JSX.Element | null {
  const [editor] = useLexicalComposerContext();

  useEffect(() => {
    return registerCodeHighlighting(editor);
  }, [editor]);

  return null;
}


// vector search future

export const MyEditor = () => {

  return <div className='editor-container tree-view' >
    <LexicalComposer initialConfig={ initialConfig; }>
      <RichTextPlugin
        contentEditable={
    <div className="editor-scroller";
    style = {{
      backgroundColor: '#fff',
            }
  }
          >
    <div className="editor" >
      <ContentEditable className="ContentEditable__root" />
        </div>
        < /div>;
};
placeholder = {< div className = 'Placeholder__root' > Enter some text < /div>};
ErrorBoundary = { LexicalErrorBoundary }
  />

  <DragDropPaste />;
{/* for /command */ }
<ComponentPickerPlugin />;
{/* /config, smart combine */ }
{/* for :emoji */ }
<EmojiPickerPlugin />;
{/* for embed twitter/youtube */ }
<AutoEmbedPlugin />;
{/* link references of other notes? */ }
<EmojisPlugin />
  < HashtagPlugin />
  <HashtagPlugin />


  < AutoLinkPlugin matchers = { MATCHERS } />

    {/* inline comment? inline therad eventually? */ };
{/* CommentPlugin */ }


{/* @ ability, self references, refer other thread / note */ }
<HistoryPlugin />;
{/* image plugin possiblity */ }
<LinkPlugin />
  < LexicalClickableLinkPlugin />

  {/* floating text format toolbar plugin */ }


  < MarkdownShortcutPlugin />
  <CodeHighlightPlugin />
  < ListPlugin />
  <CheckListPlugin />
  < TablePlugin />

  {/* other advanced table plugin, resize table? */ }

  < HorizontalRulePlugin />

  </LexicalComposer>

  < /div>;
};

